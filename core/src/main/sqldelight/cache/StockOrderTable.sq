import kotlin.Boolean;
import kotlin.String;
import kotlin.collections.List;

CREATE TABLE StockOrderTable (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    productId INTEGER NOT NULL,
    name TEXT NOT NULL,
    photo TEXT NOT NULL,
    date INTEGER NOT NULL,
    validity INTEGER NOT NULL,
    quantity INTEGER NOT NULL,
    categories TEXT AS List<String> NOT NULL,
    company TEXT NOT NULL,
    purchasePrice REAL NOT NULL,
    salePrice REAL NOT NULL,
    isOrderedByCustomer INTEGER AS Boolean
);

insert:
INSERT INTO StockOrderTable(productId, name, photo, date, validity, quantity, categories, company,
 purchasePrice, salePrice, isOrderedByCustomer)
 VALUES(?,?,?,?,?,?,?,?,?,?,?);

update:
UPDATE StockOrderTable SET productId = ?, name = ?, photo = ?, date = ?, validity = ?, quantity = ?,
 categories = ?, company = ?, purchasePrice = ?, salePrice = ?, isOrderedByCustomer = ? WHERE id = ?;

delete:
DELETE FROM StockOrderTable WHERE id = ?;

getAll:
SELECT StockOrderTable. * FROM StockOrderTable WHERE id = ?;

getLast:
SELECT StockOrderTable. * FROM StockOrderTable WHERE id = last_insert_row();

getItems:
SELECT StockOrderTable. * FROM StockOrderTable WHERE isOrderedByCustomer = ?;

search:
SELECT StockOrderTable. * FROM StockOrderTable WHERE (
 name LIKE '%'||?||'%' OR company LIKE '%'||?||'%' OR categories LIKE '%'||?||'%')
 AND isOrderedByCustomer = ?;

getByCategory:
SELECT StockOrderTable. * FROM StockOrderTable WHERE categories LIKE '%'||?||'%'
 AND isOrderedByCustomer = ?;

updateStockOrderQuantity:
UPDATE StockOrderTable SET quantity = ? WHERE id = ?;