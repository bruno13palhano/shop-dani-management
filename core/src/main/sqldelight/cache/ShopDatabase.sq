CREATE TABLE product (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    code TEXT NOT NULL,
    description TEXT NOT NULL,
    photo TEXT NOT NULL,
    date INTEGER NOT NULL,
    categoryId INTEGER NOT NULL,
    company TEXT NOT NULL,
    FOREIGN KEY (categoryId) REFERENCES ProductCategoriesTable(id) ON DELETE CASCADE
);

insert:
INSERT OR REPLACE INTO product(name, code, description, photo, date, categoryId, company)
 VALUES(?,?,?,?,?,?,?);

update:
UPDATE product SET name = ?, code = ?, description = ?, photo = ?,
 date = ?, categoryId = ?, company = ? WHERE id = ?;

delete:
DELETE FROM product WHERE id = :productId;

getAll:
SELECT P.id, P.name, P.code, P.description, P.photo, P.date, PC.categories, P.company
 FROM product AS P LEFT JOIN ProductCategoriesTable AS PC
 ON P.categoryId = PC.id;

getById:
SELECT P.id, P.name, P.code, P.description, P.photo, P.date, PC.categories, P.company
 FROM product AS P LEFT JOIN ProductCategoriesTable AS PC
 ON P.categoryId = PC.id WHERE P.id = :produtId;

getLast:
SELECT P.id, P.name, P.code, P.description, P.photo, P.date, PC.categories, P.company
 FROM product AS P LEFT JOIN ProductCategoriesTable AS PC
 ON P.categoryId = PC.id WHERE P.id = last_insert_rowid();

search:
SELECT P.id, P.name, P.code, P.description, P.photo, P.date, PC.categories, P.company
 FROM product AS P LEFT JOIN ProductCategoriesTable AS PC
 WHERE PC.categories LIKE '%' || :category || '%' OR P.name LIKE '%' || :name || '%'
    OR P.description LIKE '%' || :description || '%'
    OR P.company LIKE '%' || :company || '%';

getByCategory:
SELECT P.id, P.name, P.code, P.description, P.photo, P.date, PC.categories, P.company
 FROM product AS P INNER JOIN ProductCategoriesTable AS PC
 ON(PC.categories LIKE '%' || :category || '%') WHERE P.categoryId = PC.id;

getCategoryId:
SELECT product.categoryId FROM product WHERE id = ?;

getLastId:
SELECT last_insert_rowid();