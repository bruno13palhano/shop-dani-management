import kotlin.Boolean;
import kotlin.String;
import kotlin.collections.List;


CREATE TABLE SaleTable (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    productId INTEGER NOT NULL,
    customerId INTEGER NOT NULL,
    name TEXT NOT NULL,
    customerName TEXT NOT NULL,
    photo TEXT NOT NULL,
    quantity INTEGER NOT NULL,
    purchasePrice REAL NOT NULL,
    salePrice REAL NOT NULL,
    categories TEXT AS List<String> NOT NULL,
    company TEXT NOT NULL,
    dateOfSale INTEGER NOT NULL,
    dateOfPayment INTEGER NOT NULL,
    isOrderedByCustomer INTEGER AS Boolean NOT NULL,
    isPaidByCustomer INTEGER AS Boolean NOT NULL
);

insert:
INSERT INTO SaleTable(productId, customerId, name, customerName, photo, quantity, purchasePrice,
 salePrice, categories, company, dateOfSale, dateOfPayment, isOrderedByCustomer, isPaidByCustomer)
  VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?);

update:
UPDATE SaleTable SET productId = ?, customerId = ?, name = ?, customerName = ?, photo = ?, quantity = ?,
 purchasePrice = ?, salePrice = ?, categories = ?, company = ?, dateOfSale = ?, dateOfPayment = ?,
 isOrderedByCustomer = ?, isPaidByCustomer = ? WHERE id = ?;

delete:
DELETE FROM SaleTable WHERE id = ?;

getAll:
SELECT SaleTable. * FROM  SaleTable;

getById:
SELECT SaleTable. * FROM SaleTable WHERE id = ?;

getLast:
SELECT SaleTable. * FROM SaleTable WHERE id = last_insert_rowid();

getByCustomerId:
SELECT SaleTable. * FROM SaleTable WHERE customerId = ?;

getLastSales:
SELECT SaleTable. * FROM SaleTable ORDER BY id DESC LIMIT ?,?;

getAllStockSales:
SELECT SaleTable. * FROM SaleTable WHERE isOrderedByCustomer = 0 ORDER BY id DESC LIMIT ?,?;

getAllOrdersSales:
SELECT SaleTable. * FROM SaleTable WHERE isOrderedByCustomer = 1 ORDER BY id DESC LIMIT ?,?;